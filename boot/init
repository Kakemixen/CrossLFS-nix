#!/bin/busybox sh

# Function for dropping to a shell
shell () {
	echo ''
	echo '	Entering rescue shell.'
	echo '	Type rootdev root_device to set device to boot.'
	echo '	   ex: rootdev /dev/sda1'
	echo '	Exit shell to continue booting.'
	exec /bin/busybox sh
}

echo "Creating busybox symlinks"
/bin/busybox --install -s /bin
/bin/busybox --install -s /sbin

# Ensure that basic directories exist
for dir in /proc /sys /dev
do
	[ -d $dir ] || $MKDIR $dir
done

# No init system, so we need to set up a few more mounts
echo "mount /proc"
mount -t proc proc /proc
echo "mount /sys"
mount -t sysfs sysfs /sys

# devfs required for getty
echo "mount /dev"
mount -t devtmpfs none /dev

# Drop to shell if "shell" was passed as kernel param
/bin/grep -q 'shell' /proc/cmdline && shell

echo "mounting root squashfs"

mkdir -p /mnt/base
if ! mount /dev/mmcblk0p4 /mnt/base
then
	shell
fi

mkdir /lower
if ! mount /mnt/base/root.sqsh /lower -t squashfs -o loop
then
	shell
fi

mkdir /overlay
if ! mount -t tmpfs tmpfs /overlay
then
	shell
fi

mkdir /newroot
mkdir -p /overlay/upper
mkdir -p /overlay/work
if ! mount -t overlay overlay -olowerdir=/lower,upperdir=/overlay/upper,workdir=/overlay/work /newroot
then
	shell
fi

mkdir -p /newroot/mnt/base
if ! mount --move /mnt/base /newroot/mnt/base
then
	shell
fi

echo "moving mounts"
mount --move /sys /newroot/sys
mount --move /proc /newroot/proc
mount --move /dev /newroot/dev

echo "Executing switch_root and spawning init"
if ! exec switch_root /newroot /sbin/init
then
	echo ""
	echo "Couldn't switch_root"
	$MOUNT -t proc proc /proc
	echo "Couldn't switch_root"
	exec /bin/busybox sh
fi
